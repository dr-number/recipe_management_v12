version: '3.7'

services:
  web:
    container_name: recipe_management_web
    restart: always
    image: 1.0.0
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    stdin_open: true
    tty: true
    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./app/staticfiles/:/home/app/web/staticfiles/
      - ./app/static:/home/app/web/static
      - ./app/:/home/app/web/
      - ./logs/:/home/app/logs/
    env_file:
      - ./.env.local
    depends_on:
      - db
      # - redis
    ports:
      - '8700:8000'
      - '3000:3000' #поменять внешние порты чтобы небыло конфликта с существующими приложениями
      - '3005:3005'
      - '8888:8888'
    links:
      - db

  db:
    container_name: recipe_management_db
    restart: always
    image: postgres:14.2-alpine
    volumes:
      - ../recipe_management-db/db/:/var/lib/postgresql/data/
      #- ../recipe_management-db-lite/db/:/var/lib/postgresql/data/ #без структуры документов
      #- ../recipe_management-db-empty/db/:/var/lib/postgresql/data/ #для теста бэкапа БД
    env_file:
      - ./.env.local.db
    ports:
      - '5432:5432'

  celery_worker:
    build:
      context: ./app/
      dockerfile: Dockerfile.prod
    command: sh -c "python3 /usr/local/lib/python3.10/site-packages/debugpy --listen 0.0.0.0:6900 -m celery -A app worker -l info"
    container_name: recipe_management_celery_worker
    ports:
      - "6900:6900"
    volumes:
      - ./app:/home/app/web
    depends_on:
      - web
      - redis
    restart: on-failure
    env_file:
      - .env.local
  celery_beat:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: sh -c "celery -A app beat -l info"
    container_name: recipe_management_celery_beat
    volumes:
      - ./app:/home/app/web
    depends_on:
      - web
      - redis
    restart: on-failure
    env_file:
      - .env.local

  redis:
    container_name: recipe_management_redis
    command: sh -c 'exec redis-server'
    restart: always
    image: redis:7.0.2-alpine
    volumes:
      - ../recipe_management_redis_data:/var/lib/redis/data/

volumes:
  postgres_data:
  